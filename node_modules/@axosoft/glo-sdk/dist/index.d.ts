declare const GloSDK: (token: string) => {
    getAllBoards: (options?: import("./v1_types").GetAllBoardOptions | undefined) => Promise<[import("./v1_types").Board]>;
    boards: {
        get: (board_id: string, options?: import("./v1_types").GetBoardOptions | undefined) => Promise<import("./v1_types").Board>;
        columns: {
            edit: (board_id: string, column_id: string, { column_name, position }: {
                column_name?: string | undefined;
                position?: number | undefined;
            }) => Promise<import("./v1_types").Column>;
            delete: (board_id: string, column_id: string) => Promise<import("./v1_types").Column>;
            getCards: (board_id: string, column_id: string, options?: (import("./v1_types").GetCardOptions & import("./v1_types").PageOptions & {
                archived: boolean;
                sort: "asc" | "desc";
            }) | undefined) => Promise<[import("./v1_types").Card]>;
            create: (board_id: string, column_name: string, position?: number) => Promise<import("./v1_types").Column>;
        };
        cards: {
            get: (board_id: string, card_id: string, options?: import("./v1_types").GetCardOptions | undefined) => Promise<import("./v1_types").Card>;
            edit: (board_id: string, card_id: string, card: import("./v1_types").Card) => Promise<import("./v1_types").Card>;
            delete: (board_id: string, card_id: string) => Promise<any>;
            getAttachments: (board_id: string, card_id: string, options?: (import("./v1_types").GetAttachmentOptions & import("./v1_types").PageOptions & {
                sort: "asc" | "desc";
            }) | undefined) => Promise<[import("./v1_types").Attachment]>;
            comments: {
                edit: (board_id: string, card_id: string, comment_id: string, comment: import("./v1_types").Comment) => Promise<import("./v1_types").Comment>;
                delete: (board_id: string, card_id: string, comment_id: string) => Promise<any>;
                get: (board_id: string, card_id: string, options?: (import("./v1_types").GetCommentOptions & import("./v1_types").PageOptions & {
                    sort: "asc" | "desc";
                }) | undefined) => Promise<[import("./v1_types").Comment]>;
                create: (board_id: string, card_id: string, comment: import("./v1_types").Comment) => Promise<import("./v1_types").Comment>;
            };
            getAll: (board_id: string, options?: (import("./v1_types").GetCardOptions & import("./v1_types").PageOptions & {
                archived: boolean;
                sort: "asc" | "desc";
            }) | undefined) => Promise<[import("./v1_types").Card]>;
            create: (board_id: string, card: import("./v1_types").Card) => Promise<import("./v1_types").Card>;
        };
        getAll: (options?: import("./v1_types").GetAllBoardOptions | undefined) => Promise<[import("./v1_types").Board]>;
    };
    users: {
        getCurrentUser: (options?: import("./v1_types").GetUserOptions | undefined) => Promise<import("./v1_types").User>;
    };
};
export = GloSDK;
